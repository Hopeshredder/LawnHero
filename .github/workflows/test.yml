name: Backend and Frontend Tests

on:
  pull_request:

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    environment: backend.env
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: LawnHero_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: backend
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: LawnHero_db
          PGPORT: 5432
        run: |
          pytest

# ORIGINAL TESTS
  # frontend-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #     - run: npm ci
  #       working-directory: frontend
  #     - run: npm test
  #       working-directory: frontend

# START DEBUGGING
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Install deps
        working-directory: frontend
        run: npm ci

      - name: Build app
        working-directory: frontend
        run: npm run build
  
      - name: Start preview server (port 5173)
        working-directory: frontend
        run: npx vite preview --port 5173 --strictPort &
        # ^ starts in background
  
      - name: Wait for server
        working-directory: frontend
        run: npx wait-on http://localhost:5173

      - name: Run Cypress (Chrome headless)
        working-directory: frontend
        env:
          NODE_OPTIONS: ""
          CI: "1"
        run: npx cypress run --browser chrome --headless
# END DEBUGGING
